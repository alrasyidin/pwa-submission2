{"id":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","dependencies":[{"name":"/mnt/c/server/html/pwa-submission2/package.json","includedInParent":true,"mtime":1594055417357},{"name":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/package.json","includedInParent":true,"mtime":1594055414345},{"name":"./ref","loc":{"line":3,"column":21},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/ref.js"},{"name":"./pointer","loc":{"line":4,"column":24},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/pointer.js"},{"name":"./util/url","loc":{"line":5,"column":20},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/util/url.js"}],"generated":{"js":"\"use strict\";\n\nconst $Ref = require(\"./ref\");\nconst Pointer = require(\"./pointer\");\nconst url = require(\"./util/url\");\n\nmodule.exports = bundle;\n\n/**\n * Bundles all external JSON references into the main JSON schema, thus resulting in a schema that\n * only has *internal* references, not any *external* references.\n * This method mutates the JSON schema object, adding new references and re-mapping existing ones.\n *\n * @param {$RefParser} parser\n * @param {$RefParserOptions} options\n */\nfunction bundle (parser, options) {\n  // console.log('Bundling $ref pointers in %s', parser.$refs._root$Ref.path);\n\n  // Build an inventory of all $ref pointers in the JSON Schema\n  let inventory = [];\n  crawl(parser, \"schema\", parser.$refs._root$Ref.path + \"#\", \"#\", 0, inventory, parser.$refs, options);\n\n  // Remap all $ref pointers\n  remap(inventory);\n}\n\n/**\n * Recursively crawls the given value, and inventories all JSON references.\n *\n * @param {object} parent - The object containing the value to crawl. If the value is not an object or array, it will be ignored.\n * @param {string} key - The property key of `parent` to be crawled\n * @param {string} path - The full path of the property being crawled, possibly with a JSON Pointer in the hash\n * @param {string} pathFromRoot - The path of the property being crawled, from the schema root\n * @param {object[]} inventory - An array of already-inventoried $ref pointers\n * @param {$Refs} $refs\n * @param {$RefParserOptions} options\n */\nfunction crawl (parent, key, path, pathFromRoot, indirections, inventory, $refs, options) {\n  let obj = key === null ? parent : parent[key];\n\n  if (obj && typeof obj === \"object\") {\n    if ($Ref.isAllowed$Ref(obj)) {\n      inventory$Ref(parent, key, path, pathFromRoot, indirections, inventory, $refs, options);\n    }\n    else {\n      // Crawl the object in a specific order that's optimized for bundling.\n      // This is important because it determines how `pathFromRoot` gets built,\n      // which later determines which keys get dereferenced and which ones get remapped\n      let keys = Object.keys(obj)\n        .sort((a, b) => {\n          // Most people will expect references to be bundled into the the \"definitions\" property,\n          // so we always crawl that property first, if it exists.\n          if (a === \"definitions\") {\n            return -1;\n          }\n          else if (b === \"definitions\") {\n            return 1;\n          }\n          else {\n            // Otherwise, crawl the keys based on their length.\n            // This produces the shortest possible bundled references\n            return a.length - b.length;\n          }\n        });\n\n      // eslint-disable-next-line no-shadow\n      for (let key of keys) {\n        let keyPath = Pointer.join(path, key);\n        let keyPathFromRoot = Pointer.join(pathFromRoot, key);\n        let value = obj[key];\n\n        if ($Ref.isAllowed$Ref(value)) {\n          inventory$Ref(obj, key, path, keyPathFromRoot, indirections, inventory, $refs, options);\n        }\n        else {\n          crawl(obj, key, keyPath, keyPathFromRoot, indirections, inventory, $refs, options);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Inventories the given JSON Reference (i.e. records detailed information about it so we can\n * optimize all $refs in the schema), and then crawls the resolved value.\n *\n * @param {object} $refParent - The object that contains a JSON Reference as one of its keys\n * @param {string} $refKey - The key in `$refParent` that is a JSON Reference\n * @param {string} path - The full path of the JSON Reference at `$refKey`, possibly with a JSON Pointer in the hash\n * @param {string} pathFromRoot - The path of the JSON Reference at `$refKey`, from the schema root\n * @param {object[]} inventory - An array of already-inventoried $ref pointers\n * @param {$Refs} $refs\n * @param {$RefParserOptions} options\n */\nfunction inventory$Ref ($refParent, $refKey, path, pathFromRoot, indirections, inventory, $refs, options) {\n  let $ref = $refKey === null ? $refParent : $refParent[$refKey];\n  let $refPath = url.resolve(path, $ref.$ref);\n  let pointer = $refs._resolve($refPath, pathFromRoot, options);\n  if (pointer === null) {\n    return;\n  }\n\n  let depth = Pointer.parse(pathFromRoot).length;\n  let file = url.stripHash(pointer.path);\n  let hash = url.getHash(pointer.path);\n  let external = file !== $refs._root$Ref.path;\n  let extended = $Ref.isExtended$Ref($ref);\n  indirections += pointer.indirections;\n\n  let existingEntry = findInInventory(inventory, $refParent, $refKey);\n  if (existingEntry) {\n    // This $Ref has already been inventoried, so we don't need to process it again\n    if (depth < existingEntry.depth || indirections < existingEntry.indirections) {\n      removeFromInventory(inventory, existingEntry);\n    }\n    else {\n      return;\n    }\n  }\n\n  inventory.push({\n    $ref,                   // The JSON Reference (e.g. {$ref: string})\n    parent: $refParent,           // The object that contains this $ref pointer\n    key: $refKey,                 // The key in `parent` that is the $ref pointer\n    pathFromRoot,   // The path to the $ref pointer, from the JSON Schema root\n    depth,                 // How far from the JSON Schema root is this $ref pointer?\n    file,                   // The file that the $ref pointer resolves to\n    hash,                   // The hash within `file` that the $ref pointer resolves to\n    value: pointer.value,         // The resolved value of the $ref pointer\n    circular: pointer.circular,   // Is this $ref pointer DIRECTLY circular? (i.e. it references itself)\n    extended,           // Does this $ref extend its resolved value? (i.e. it has extra properties, in addition to \"$ref\")\n    external,           // Does this $ref pointer point to a file other than the main JSON Schema file?\n    indirections,   // The number of indirect references that were traversed to resolve the value\n  });\n\n  // Recursively crawl the resolved value\n  crawl(pointer.value, null, pointer.path, pathFromRoot, indirections + 1, inventory, $refs, options);\n}\n\n/**\n * Re-maps every $ref pointer, so that they're all relative to the root of the JSON Schema.\n * Each referenced value is dereferenced EXACTLY ONCE.  All subsequent references to the same\n * value are re-mapped to point to the first reference.\n *\n * @example:\n *  {\n *    first: { $ref: somefile.json#/some/part },\n *    second: { $ref: somefile.json#/another/part },\n *    third: { $ref: somefile.json },\n *    fourth: { $ref: somefile.json#/some/part/sub/part }\n *  }\n *\n * In this example, there are four references to the same file, but since the third reference points\n * to the ENTIRE file, that's the only one we need to dereference.  The other three can just be\n * remapped to point inside the third one.\n *\n * On the other hand, if the third reference DIDN'T exist, then the first and second would both need\n * to be dereferenced, since they point to different parts of the file. The fourth reference does NOT\n * need to be dereferenced, because it can be remapped to point inside the first one.\n *\n * @param {object[]} inventory\n */\nfunction remap (inventory) {\n  // Group & sort all the $ref pointers, so they're in the order that we need to dereference/remap them\n  inventory.sort((a, b) => {\n    if (a.file !== b.file) {\n      // Group all the $refs that point to the same file\n      return a.file < b.file ? -1 : +1;\n    }\n    else if (a.hash !== b.hash) {\n      // Group all the $refs that point to the same part of the file\n      return a.hash < b.hash ? -1 : +1;\n    }\n    else if (a.circular !== b.circular) {\n      // If the $ref points to itself, then sort it higher than other $refs that point to this $ref\n      return a.circular ? -1 : +1;\n    }\n    else if (a.extended !== b.extended) {\n      // If the $ref extends the resolved value, then sort it lower than other $refs that don't extend the value\n      return a.extended ? +1 : -1;\n    }\n    else if (a.indirections !== b.indirections) {\n      // Sort direct references higher than indirect references\n      return a.indirections - b.indirections;\n    }\n    else if (a.depth !== b.depth) {\n      // Sort $refs by how close they are to the JSON Schema root\n      return a.depth - b.depth;\n    }\n    else {\n      // Determine how far each $ref is from the \"definitions\" property.\n      // Most people will expect references to be bundled into the the \"definitions\" property if possible.\n      let aDefinitionsIndex = a.pathFromRoot.lastIndexOf(\"/definitions\");\n      let bDefinitionsIndex = b.pathFromRoot.lastIndexOf(\"/definitions\");\n\n      if (aDefinitionsIndex !== bDefinitionsIndex) {\n        // Give higher priority to the $ref that's closer to the \"definitions\" property\n        return bDefinitionsIndex - aDefinitionsIndex;\n      }\n      else {\n        // All else is equal, so use the shorter path, which will produce the shortest possible reference\n        return a.pathFromRoot.length - b.pathFromRoot.length;\n      }\n    }\n  });\n\n  let file, hash, pathFromRoot;\n  for (let entry of inventory) {\n    // console.log('Re-mapping $ref pointer \"%s\" at %s', entry.$ref.$ref, entry.pathFromRoot);\n\n    if (!entry.external) {\n      // This $ref already resolves to the main JSON Schema file\n      entry.$ref.$ref = entry.hash;\n    }\n    else if (entry.file === file && entry.hash === hash) {\n      // This $ref points to the same value as the prevous $ref, so remap it to the same path\n      entry.$ref.$ref = pathFromRoot;\n    }\n    else if (entry.file === file && entry.hash.indexOf(hash + \"/\") === 0) {\n      // This $ref points to a sub-value of the prevous $ref, so remap it beneath that path\n      entry.$ref.$ref = Pointer.join(pathFromRoot, Pointer.parse(entry.hash.replace(hash, \"#\")));\n    }\n    else {\n      // We've moved to a new file or new hash\n      file = entry.file;\n      hash = entry.hash;\n      pathFromRoot = entry.pathFromRoot;\n\n      // This is the first $ref to point to this value, so dereference the value.\n      // Any other $refs that point to the same value will point to this $ref instead\n      entry.$ref = entry.parent[entry.key] = $Ref.dereference(entry.$ref, entry.value);\n\n      if (entry.circular) {\n        // This $ref points to itself\n        entry.$ref.$ref = entry.pathFromRoot;\n      }\n    }\n\n    // console.log('    new value: %s', (entry.$ref && entry.$ref.$ref) ? entry.$ref.$ref : '[object Object]');\n  }\n}\n\n/**\n * TODO\n */\nfunction findInInventory (inventory, $refParent, $refKey) {\n  for (let i = 0; i < inventory.length; i++) {\n    let existingEntry = inventory[i];\n    if (existingEntry.parent === $refParent && existingEntry.key === $refKey) {\n      return existingEntry;\n    }\n  }\n}\n\nfunction removeFromInventory (inventory, entry) {\n  let index = inventory.indexOf(entry);\n  inventory.splice(index, 1);\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}}],"sources":{"../node_modules/@apidevtools/json-schema-ref-parser/lib/bundle.js":"\"use strict\";\n\nconst $Ref = require(\"./ref\");\nconst Pointer = require(\"./pointer\");\nconst url = require(\"./util/url\");\n\nmodule.exports = bundle;\n\n/**\n * Bundles all external JSON references into the main JSON schema, thus resulting in a schema that\n * only has *internal* references, not any *external* references.\n * This method mutates the JSON schema object, adding new references and re-mapping existing ones.\n *\n * @param {$RefParser} parser\n * @param {$RefParserOptions} options\n */\nfunction bundle (parser, options) {\n  // console.log('Bundling $ref pointers in %s', parser.$refs._root$Ref.path);\n\n  // Build an inventory of all $ref pointers in the JSON Schema\n  let inventory = [];\n  crawl(parser, \"schema\", parser.$refs._root$Ref.path + \"#\", \"#\", 0, inventory, parser.$refs, options);\n\n  // Remap all $ref pointers\n  remap(inventory);\n}\n\n/**\n * Recursively crawls the given value, and inventories all JSON references.\n *\n * @param {object} parent - The object containing the value to crawl. If the value is not an object or array, it will be ignored.\n * @param {string} key - The property key of `parent` to be crawled\n * @param {string} path - The full path of the property being crawled, possibly with a JSON Pointer in the hash\n * @param {string} pathFromRoot - The path of the property being crawled, from the schema root\n * @param {object[]} inventory - An array of already-inventoried $ref pointers\n * @param {$Refs} $refs\n * @param {$RefParserOptions} options\n */\nfunction crawl (parent, key, path, pathFromRoot, indirections, inventory, $refs, options) {\n  let obj = key === null ? parent : parent[key];\n\n  if (obj && typeof obj === \"object\") {\n    if ($Ref.isAllowed$Ref(obj)) {\n      inventory$Ref(parent, key, path, pathFromRoot, indirections, inventory, $refs, options);\n    }\n    else {\n      // Crawl the object in a specific order that's optimized for bundling.\n      // This is important because it determines how `pathFromRoot` gets built,\n      // which later determines which keys get dereferenced and which ones get remapped\n      let keys = Object.keys(obj)\n        .sort((a, b) => {\n          // Most people will expect references to be bundled into the the \"definitions\" property,\n          // so we always crawl that property first, if it exists.\n          if (a === \"definitions\") {\n            return -1;\n          }\n          else if (b === \"definitions\") {\n            return 1;\n          }\n          else {\n            // Otherwise, crawl the keys based on their length.\n            // This produces the shortest possible bundled references\n            return a.length - b.length;\n          }\n        });\n\n      // eslint-disable-next-line no-shadow\n      for (let key of keys) {\n        let keyPath = Pointer.join(path, key);\n        let keyPathFromRoot = Pointer.join(pathFromRoot, key);\n        let value = obj[key];\n\n        if ($Ref.isAllowed$Ref(value)) {\n          inventory$Ref(obj, key, path, keyPathFromRoot, indirections, inventory, $refs, options);\n        }\n        else {\n          crawl(obj, key, keyPath, keyPathFromRoot, indirections, inventory, $refs, options);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Inventories the given JSON Reference (i.e. records detailed information about it so we can\n * optimize all $refs in the schema), and then crawls the resolved value.\n *\n * @param {object} $refParent - The object that contains a JSON Reference as one of its keys\n * @param {string} $refKey - The key in `$refParent` that is a JSON Reference\n * @param {string} path - The full path of the JSON Reference at `$refKey`, possibly with a JSON Pointer in the hash\n * @param {string} pathFromRoot - The path of the JSON Reference at `$refKey`, from the schema root\n * @param {object[]} inventory - An array of already-inventoried $ref pointers\n * @param {$Refs} $refs\n * @param {$RefParserOptions} options\n */\nfunction inventory$Ref ($refParent, $refKey, path, pathFromRoot, indirections, inventory, $refs, options) {\n  let $ref = $refKey === null ? $refParent : $refParent[$refKey];\n  let $refPath = url.resolve(path, $ref.$ref);\n  let pointer = $refs._resolve($refPath, pathFromRoot, options);\n  if (pointer === null) {\n    return;\n  }\n\n  let depth = Pointer.parse(pathFromRoot).length;\n  let file = url.stripHash(pointer.path);\n  let hash = url.getHash(pointer.path);\n  let external = file !== $refs._root$Ref.path;\n  let extended = $Ref.isExtended$Ref($ref);\n  indirections += pointer.indirections;\n\n  let existingEntry = findInInventory(inventory, $refParent, $refKey);\n  if (existingEntry) {\n    // This $Ref has already been inventoried, so we don't need to process it again\n    if (depth < existingEntry.depth || indirections < existingEntry.indirections) {\n      removeFromInventory(inventory, existingEntry);\n    }\n    else {\n      return;\n    }\n  }\n\n  inventory.push({\n    $ref,                   // The JSON Reference (e.g. {$ref: string})\n    parent: $refParent,           // The object that contains this $ref pointer\n    key: $refKey,                 // The key in `parent` that is the $ref pointer\n    pathFromRoot,   // The path to the $ref pointer, from the JSON Schema root\n    depth,                 // How far from the JSON Schema root is this $ref pointer?\n    file,                   // The file that the $ref pointer resolves to\n    hash,                   // The hash within `file` that the $ref pointer resolves to\n    value: pointer.value,         // The resolved value of the $ref pointer\n    circular: pointer.circular,   // Is this $ref pointer DIRECTLY circular? (i.e. it references itself)\n    extended,           // Does this $ref extend its resolved value? (i.e. it has extra properties, in addition to \"$ref\")\n    external,           // Does this $ref pointer point to a file other than the main JSON Schema file?\n    indirections,   // The number of indirect references that were traversed to resolve the value\n  });\n\n  // Recursively crawl the resolved value\n  crawl(pointer.value, null, pointer.path, pathFromRoot, indirections + 1, inventory, $refs, options);\n}\n\n/**\n * Re-maps every $ref pointer, so that they're all relative to the root of the JSON Schema.\n * Each referenced value is dereferenced EXACTLY ONCE.  All subsequent references to the same\n * value are re-mapped to point to the first reference.\n *\n * @example:\n *  {\n *    first: { $ref: somefile.json#/some/part },\n *    second: { $ref: somefile.json#/another/part },\n *    third: { $ref: somefile.json },\n *    fourth: { $ref: somefile.json#/some/part/sub/part }\n *  }\n *\n * In this example, there are four references to the same file, but since the third reference points\n * to the ENTIRE file, that's the only one we need to dereference.  The other three can just be\n * remapped to point inside the third one.\n *\n * On the other hand, if the third reference DIDN'T exist, then the first and second would both need\n * to be dereferenced, since they point to different parts of the file. The fourth reference does NOT\n * need to be dereferenced, because it can be remapped to point inside the first one.\n *\n * @param {object[]} inventory\n */\nfunction remap (inventory) {\n  // Group & sort all the $ref pointers, so they're in the order that we need to dereference/remap them\n  inventory.sort((a, b) => {\n    if (a.file !== b.file) {\n      // Group all the $refs that point to the same file\n      return a.file < b.file ? -1 : +1;\n    }\n    else if (a.hash !== b.hash) {\n      // Group all the $refs that point to the same part of the file\n      return a.hash < b.hash ? -1 : +1;\n    }\n    else if (a.circular !== b.circular) {\n      // If the $ref points to itself, then sort it higher than other $refs that point to this $ref\n      return a.circular ? -1 : +1;\n    }\n    else if (a.extended !== b.extended) {\n      // If the $ref extends the resolved value, then sort it lower than other $refs that don't extend the value\n      return a.extended ? +1 : -1;\n    }\n    else if (a.indirections !== b.indirections) {\n      // Sort direct references higher than indirect references\n      return a.indirections - b.indirections;\n    }\n    else if (a.depth !== b.depth) {\n      // Sort $refs by how close they are to the JSON Schema root\n      return a.depth - b.depth;\n    }\n    else {\n      // Determine how far each $ref is from the \"definitions\" property.\n      // Most people will expect references to be bundled into the the \"definitions\" property if possible.\n      let aDefinitionsIndex = a.pathFromRoot.lastIndexOf(\"/definitions\");\n      let bDefinitionsIndex = b.pathFromRoot.lastIndexOf(\"/definitions\");\n\n      if (aDefinitionsIndex !== bDefinitionsIndex) {\n        // Give higher priority to the $ref that's closer to the \"definitions\" property\n        return bDefinitionsIndex - aDefinitionsIndex;\n      }\n      else {\n        // All else is equal, so use the shorter path, which will produce the shortest possible reference\n        return a.pathFromRoot.length - b.pathFromRoot.length;\n      }\n    }\n  });\n\n  let file, hash, pathFromRoot;\n  for (let entry of inventory) {\n    // console.log('Re-mapping $ref pointer \"%s\" at %s', entry.$ref.$ref, entry.pathFromRoot);\n\n    if (!entry.external) {\n      // This $ref already resolves to the main JSON Schema file\n      entry.$ref.$ref = entry.hash;\n    }\n    else if (entry.file === file && entry.hash === hash) {\n      // This $ref points to the same value as the prevous $ref, so remap it to the same path\n      entry.$ref.$ref = pathFromRoot;\n    }\n    else if (entry.file === file && entry.hash.indexOf(hash + \"/\") === 0) {\n      // This $ref points to a sub-value of the prevous $ref, so remap it beneath that path\n      entry.$ref.$ref = Pointer.join(pathFromRoot, Pointer.parse(entry.hash.replace(hash, \"#\")));\n    }\n    else {\n      // We've moved to a new file or new hash\n      file = entry.file;\n      hash = entry.hash;\n      pathFromRoot = entry.pathFromRoot;\n\n      // This is the first $ref to point to this value, so dereference the value.\n      // Any other $refs that point to the same value will point to this $ref instead\n      entry.$ref = entry.parent[entry.key] = $Ref.dereference(entry.$ref, entry.value);\n\n      if (entry.circular) {\n        // This $ref points to itself\n        entry.$ref.$ref = entry.pathFromRoot;\n      }\n    }\n\n    // console.log('    new value: %s', (entry.$ref && entry.$ref.$ref) ? entry.$ref.$ref : '[object Object]');\n  }\n}\n\n/**\n * TODO\n */\nfunction findInInventory (inventory, $refParent, $refKey) {\n  for (let i = 0; i < inventory.length; i++) {\n    let existingEntry = inventory[i];\n    if (existingEntry.parent === $refParent && existingEntry.key === $refKey) {\n      return existingEntry;\n    }\n  }\n}\n\nfunction removeFromInventory (inventory, entry) {\n  let index = inventory.indexOf(entry);\n  inventory.splice(index, 1);\n}\n"},"lineCount":260}},"error":null,"hash":"6e69977c6f16b7892bf9520d15527526","cacheData":{"env":{}}}