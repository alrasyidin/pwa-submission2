{"id":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","dependencies":[{"name":"/mnt/c/server/html/pwa-submission2/package.json","includedInParent":true,"mtime":1594055417357},{"name":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/package.json","includedInParent":true,"mtime":1594055413754},{"name":"../util","loc":{"line":3,"column":21},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/util.js"},{"name":"@jsdevtools/ono","loc":{"line":4,"column":24},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@jsdevtools/ono/esm/index.js"},{"name":"@apidevtools/swagger-methods","loc":{"line":5,"column":31},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-methods/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nconst util = require(\"../util\");\nconst { ono } = require(\"@jsdevtools/ono\");\nconst swaggerMethods = require(\"@apidevtools/swagger-methods\");\nconst primitiveTypes = [\"array\", \"boolean\", \"integer\", \"number\", \"string\"];\nconst schemaTypes = [\"array\", \"boolean\", \"integer\", \"number\", \"string\", \"object\", \"null\", undefined];\n\nmodule.exports = validateSpec;\n\n/**\n * Validates parts of the Swagger 2.0 spec that aren't covered by the Swagger 2.0 JSON Schema.\n *\n * @param {SwaggerObject} api\n */\nfunction validateSpec (api) {\n  if (api.openapi) {\n    // We don't (yet) support validating against the OpenAPI spec\n    return;\n  }\n\n  let paths = Object.keys(api.paths || {});\n  let operationIds = [];\n  for (let pathName of paths) {\n    let path = api.paths[pathName];\n    let pathId = \"/paths\" + pathName;\n\n    if (path && pathName.indexOf(\"/\") === 0) {\n      validatePath(api, path, pathId, operationIds);\n    }\n  }\n\n  let definitions = Object.keys(api.definitions || {});\n  for (let definitionName of definitions) {\n    let definition = api.definitions[definitionName];\n    let definitionId = \"/definitions/\" + definitionName;\n    validateRequiredPropertiesExist(definition, definitionId);\n  }\n}\n\n/**\n * Validates the given path.\n *\n * @param {SwaggerObject} api           - The entire Swagger API object\n * @param {object}        path          - A Path object, from the Swagger API\n * @param {string}        pathId        - A value that uniquely identifies the path\n * @param {string}        operationIds  - An array of collected operationIds found in other paths\n */\nfunction validatePath (api, path, pathId, operationIds) {\n  for (let operationName of swaggerMethods) {\n    let operation = path[operationName];\n    let operationId = pathId + \"/\" + operationName;\n\n    if (operation) {\n      let declaredOperationId = operation.operationId;\n      if (declaredOperationId) {\n        if (operationIds.indexOf(declaredOperationId) === -1) {\n          operationIds.push(declaredOperationId);\n        }\n        else {\n          throw ono.syntax(`Validation failed. Duplicate operation id '${declaredOperationId}'`);\n        }\n      }\n      validateParameters(api, path, pathId, operation, operationId);\n\n      let responses = Object.keys(operation.responses || {});\n      for (let responseName of responses) {\n        let response = operation.responses[responseName];\n        let responseId = operationId + \"/responses/\" + responseName;\n        validateResponse(responseName, (response || {}), responseId);\n      }\n    }\n  }\n}\n\n/**\n * Validates the parameters for the given operation.\n *\n * @param {SwaggerObject} api           - The entire Swagger API object\n * @param {object}        path          - A Path object, from the Swagger API\n * @param {string}        pathId        - A value that uniquely identifies the path\n * @param {object}        operation     - An Operation object, from the Swagger API\n * @param {string}        operationId   - A value that uniquely identifies the operation\n */\nfunction validateParameters (api, path, pathId, operation, operationId) {\n  let pathParams = path.parameters || [];\n  let operationParams = operation.parameters || [];\n\n  // Check for duplicate path parameters\n  try {\n    checkForDuplicates(pathParams);\n  }\n  catch (e) {\n    throw ono.syntax(e, `Validation failed. ${pathId} has duplicate parameters`);\n  }\n\n  // Check for duplicate operation parameters\n  try {\n    checkForDuplicates(operationParams);\n  }\n  catch (e) {\n    throw ono.syntax(e, `Validation failed. ${operationId} has duplicate parameters`);\n  }\n\n  // Combine the path and operation parameters,\n  // with the operation params taking precedence over the path params\n  let params = pathParams.reduce((combinedParams, value) => {\n    let duplicate = combinedParams.some((param) => {\n      return param.in === value.in && param.name === value.name;\n    });\n    if (!duplicate) {\n      combinedParams.push(value);\n    }\n    return combinedParams;\n  }, operationParams.slice());\n\n  validateBodyParameters(params, operationId);\n  validatePathParameters(params, pathId, operationId);\n  validateParameterTypes(params, api, operation, operationId);\n}\n\n/**\n * Validates body and formData parameters for the given operation.\n *\n * @param   {object[]}  params       -  An array of Parameter objects\n * @param   {string}    operationId  -  A value that uniquely identifies the operation\n */\nfunction validateBodyParameters (params, operationId) {\n  let bodyParams = params.filter((param) => { return param.in === \"body\"; });\n  let formParams = params.filter((param) => { return param.in === \"formData\"; });\n\n  // There can only be one \"body\" parameter\n  if (bodyParams.length > 1) {\n    throw ono.syntax(\n      `Validation failed. ${operationId} has ${bodyParams.length} body parameters. Only one is allowed.`,\n    );\n  }\n  else if (bodyParams.length > 0 && formParams.length > 0) {\n    // \"body\" params and \"formData\" params are mutually exclusive\n    throw ono.syntax(\n      `Validation failed. ${operationId} has body parameters and formData parameters. Only one or the other is allowed.`,\n    );\n  }\n}\n\n/**\n * Validates path parameters for the given path.\n *\n * @param   {object[]}  params        - An array of Parameter objects\n * @param   {string}    pathId        - A value that uniquely identifies the path\n * @param   {string}    operationId   - A value that uniquely identifies the operation\n */\nfunction validatePathParameters (params, pathId, operationId) {\n  // Find all {placeholders} in the path string\n  let placeholders = pathId.match(util.swaggerParamRegExp) || [];\n\n  // Check for duplicates\n  for (let i = 0; i < placeholders.length; i++) {\n    for (let j = i + 1; j < placeholders.length; j++) {\n      if (placeholders[i] === placeholders[j]) {\n        throw ono.syntax(\n          `Validation failed. ${operationId} has multiple path placeholders named ${placeholders[i]}`);\n      }\n    }\n  }\n\n  params = params.filter((param) => { return param.in === \"path\"; });\n\n  for (let param of params) {\n    if (param.required !== true) {\n      throw ono.syntax(\n        \"Validation failed. Path parameters cannot be optional. \" +\n        `Set required=true for the \"${param.name}\" parameter at ${operationId}`,\n      );\n    }\n    let match = placeholders.indexOf(\"{\" + param.name + \"}\");\n    if (match === -1) {\n      throw ono.syntax(\n        `Validation failed. ${operationId} has a path parameter named \"${param.name}\", ` +\n        `but there is no corresponding {${param.name}} in the path string`\n      );\n    }\n    placeholders.splice(match, 1);\n  }\n\n  if (placeholders.length > 0) {\n    throw ono.syntax(`Validation failed. ${operationId} is missing path parameter(s) for ${placeholders}`);\n  }\n}\n\n/**\n * Validates data types of parameters for the given operation.\n *\n * @param   {object[]}  params       -  An array of Parameter objects\n * @param   {object}    api          -  The entire Swagger API object\n * @param   {object}    operation    -  An Operation object, from the Swagger API\n * @param   {string}    operationId  -  A value that uniquely identifies the operation\n */\nfunction validateParameterTypes (params, api, operation, operationId) {\n  for (let param of params) {\n    let parameterId = operationId + \"/parameters/\" + param.name;\n    let schema, validTypes;\n\n    switch (param.in) {\n      case \"body\":\n        schema = param.schema;\n        validTypes = schemaTypes;\n        break;\n      case \"formData\":\n        schema = param;\n        validTypes = primitiveTypes.concat(\"file\");\n        break;\n      default:\n        schema = param;\n        validTypes = primitiveTypes;\n    }\n\n    validateSchema(schema, parameterId, validTypes);\n    validateRequiredPropertiesExist(schema, parameterId);\n\n    if (schema.type === \"file\") {\n      // \"file\" params must consume at least one of these MIME types\n      let formData = /multipart\\/(.*\\+)?form-data/;\n      let urlEncoded = /application\\/(.*\\+)?x-www-form-urlencoded/;\n\n      let consumes = operation.consumes || api.consumes || [];\n\n      let hasValidMimeType = consumes.some((consume) => {\n        return formData.test(consume) || urlEncoded.test(consume);\n      });\n\n      if (!hasValidMimeType) {\n        throw ono.syntax(\n          `Validation failed. ${operationId} has a file parameter, so it must consume multipart/form-data ` +\n          \"or application/x-www-form-urlencoded\",\n        );\n      }\n    }\n  }\n}\n\n/**\n * Checks the given parameter list for duplicates, and throws an error if found.\n *\n * @param   {object[]}  params  - An array of Parameter objects\n */\nfunction checkForDuplicates (params) {\n  for (let i = 0; i < params.length - 1; i++) {\n    let outer = params[i];\n    for (let j = i + 1; j < params.length; j++) {\n      let inner = params[j];\n      if (outer.name === inner.name && outer.in === inner.in) {\n        throw ono.syntax(`Validation failed. Found multiple ${outer.in} parameters named \"${outer.name}\"`);\n      }\n    }\n  }\n}\n\n/**\n * Validates the given response object.\n *\n * @param   {string}    code        -  The HTTP response code (or \"default\")\n * @param   {object}    response    -  A Response object, from the Swagger API\n * @param   {string}    responseId  -  A value that uniquely identifies the response\n */\nfunction validateResponse (code, response, responseId) {\n  if (code !== \"default\" && (code < 100 || code > 599)) {\n    throw ono.syntax(`Validation failed. ${responseId} has an invalid response code (${code})`);\n  }\n\n  let headers = Object.keys(response.headers || {});\n  for (let headerName of headers) {\n    let header = response.headers[headerName];\n    let headerId = responseId + \"/headers/\" + headerName;\n    validateSchema(header, headerId, primitiveTypes);\n  }\n\n  if (response.schema) {\n    let validTypes = schemaTypes.concat(\"file\");\n    if (validTypes.indexOf(response.schema.type) === -1) {\n      throw ono.syntax(\n        `Validation failed. ${responseId} has an invalid response schema type (${response.schema.type})`);\n    }\n    else {\n      validateSchema(response.schema, responseId + \"/schema\", validTypes);\n    }\n  }\n}\n\n/**\n * Validates the given Swagger schema object.\n *\n * @param {object}    schema      - A Schema object, from the Swagger API\n * @param {string}    schemaId    - A value that uniquely identifies the schema object\n * @param {string[]}  validTypes  - An array of the allowed schema types\n */\nfunction validateSchema (schema, schemaId, validTypes) {\n  if (validTypes.indexOf(schema.type) === -1) {\n    throw ono.syntax(\n      `Validation failed. ${schemaId} has an invalid type (${schema.type})`);\n  }\n\n  if (schema.type === \"array\" && !schema.items) {\n    throw ono.syntax(`Validation failed. ${schemaId} is an array, so it must include an \"items\" schema`);\n  }\n}\n\n/**\n * Validates that the declared properties of the given Swagger schema object actually exist.\n *\n * @param {object}    schema      - A Schema object, from the Swagger API\n * @param {string}    schemaId    - A value that uniquely identifies the schema object\n */\nfunction validateRequiredPropertiesExist (schema, schemaId) {\n  /**\n   * Recursively collects all properties of the schema and its ancestors. They are added to the props object.\n   */\n  function collectProperties (schemaObj, props) {\n    if (schemaObj.properties) {\n      for (let property in schemaObj.properties) {\n        if (schemaObj.properties.hasOwnProperty(property)) {\n          props[property] = schemaObj.properties[property];\n        }\n      }\n    }\n    if (schemaObj.allOf) {\n      for (let parent of schemaObj.allOf) {\n        collectProperties(parent, props);\n      }\n    }\n  }\n\n  if (schema.required && Array.isArray(schema.required)) {\n    let props = {};\n    collectProperties(schema, props);\n    for (let requiredProperty of schema.required) {\n      if (!props[requiredProperty]) {\n        throw ono.syntax(\n          `Validation failed. Property '${requiredProperty}' listed as required but does not exist in '${schemaId}'`\n        );\n      }\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}}],"sources":{"../node_modules/@apidevtools/swagger-parser/lib/validators/spec.js":"\"use strict\";\n\nconst util = require(\"../util\");\nconst { ono } = require(\"@jsdevtools/ono\");\nconst swaggerMethods = require(\"@apidevtools/swagger-methods\");\nconst primitiveTypes = [\"array\", \"boolean\", \"integer\", \"number\", \"string\"];\nconst schemaTypes = [\"array\", \"boolean\", \"integer\", \"number\", \"string\", \"object\", \"null\", undefined];\n\nmodule.exports = validateSpec;\n\n/**\n * Validates parts of the Swagger 2.0 spec that aren't covered by the Swagger 2.0 JSON Schema.\n *\n * @param {SwaggerObject} api\n */\nfunction validateSpec (api) {\n  if (api.openapi) {\n    // We don't (yet) support validating against the OpenAPI spec\n    return;\n  }\n\n  let paths = Object.keys(api.paths || {});\n  let operationIds = [];\n  for (let pathName of paths) {\n    let path = api.paths[pathName];\n    let pathId = \"/paths\" + pathName;\n\n    if (path && pathName.indexOf(\"/\") === 0) {\n      validatePath(api, path, pathId, operationIds);\n    }\n  }\n\n  let definitions = Object.keys(api.definitions || {});\n  for (let definitionName of definitions) {\n    let definition = api.definitions[definitionName];\n    let definitionId = \"/definitions/\" + definitionName;\n    validateRequiredPropertiesExist(definition, definitionId);\n  }\n}\n\n/**\n * Validates the given path.\n *\n * @param {SwaggerObject} api           - The entire Swagger API object\n * @param {object}        path          - A Path object, from the Swagger API\n * @param {string}        pathId        - A value that uniquely identifies the path\n * @param {string}        operationIds  - An array of collected operationIds found in other paths\n */\nfunction validatePath (api, path, pathId, operationIds) {\n  for (let operationName of swaggerMethods) {\n    let operation = path[operationName];\n    let operationId = pathId + \"/\" + operationName;\n\n    if (operation) {\n      let declaredOperationId = operation.operationId;\n      if (declaredOperationId) {\n        if (operationIds.indexOf(declaredOperationId) === -1) {\n          operationIds.push(declaredOperationId);\n        }\n        else {\n          throw ono.syntax(`Validation failed. Duplicate operation id '${declaredOperationId}'`);\n        }\n      }\n      validateParameters(api, path, pathId, operation, operationId);\n\n      let responses = Object.keys(operation.responses || {});\n      for (let responseName of responses) {\n        let response = operation.responses[responseName];\n        let responseId = operationId + \"/responses/\" + responseName;\n        validateResponse(responseName, (response || {}), responseId);\n      }\n    }\n  }\n}\n\n/**\n * Validates the parameters for the given operation.\n *\n * @param {SwaggerObject} api           - The entire Swagger API object\n * @param {object}        path          - A Path object, from the Swagger API\n * @param {string}        pathId        - A value that uniquely identifies the path\n * @param {object}        operation     - An Operation object, from the Swagger API\n * @param {string}        operationId   - A value that uniquely identifies the operation\n */\nfunction validateParameters (api, path, pathId, operation, operationId) {\n  let pathParams = path.parameters || [];\n  let operationParams = operation.parameters || [];\n\n  // Check for duplicate path parameters\n  try {\n    checkForDuplicates(pathParams);\n  }\n  catch (e) {\n    throw ono.syntax(e, `Validation failed. ${pathId} has duplicate parameters`);\n  }\n\n  // Check for duplicate operation parameters\n  try {\n    checkForDuplicates(operationParams);\n  }\n  catch (e) {\n    throw ono.syntax(e, `Validation failed. ${operationId} has duplicate parameters`);\n  }\n\n  // Combine the path and operation parameters,\n  // with the operation params taking precedence over the path params\n  let params = pathParams.reduce((combinedParams, value) => {\n    let duplicate = combinedParams.some((param) => {\n      return param.in === value.in && param.name === value.name;\n    });\n    if (!duplicate) {\n      combinedParams.push(value);\n    }\n    return combinedParams;\n  }, operationParams.slice());\n\n  validateBodyParameters(params, operationId);\n  validatePathParameters(params, pathId, operationId);\n  validateParameterTypes(params, api, operation, operationId);\n}\n\n/**\n * Validates body and formData parameters for the given operation.\n *\n * @param   {object[]}  params       -  An array of Parameter objects\n * @param   {string}    operationId  -  A value that uniquely identifies the operation\n */\nfunction validateBodyParameters (params, operationId) {\n  let bodyParams = params.filter((param) => { return param.in === \"body\"; });\n  let formParams = params.filter((param) => { return param.in === \"formData\"; });\n\n  // There can only be one \"body\" parameter\n  if (bodyParams.length > 1) {\n    throw ono.syntax(\n      `Validation failed. ${operationId} has ${bodyParams.length} body parameters. Only one is allowed.`,\n    );\n  }\n  else if (bodyParams.length > 0 && formParams.length > 0) {\n    // \"body\" params and \"formData\" params are mutually exclusive\n    throw ono.syntax(\n      `Validation failed. ${operationId} has body parameters and formData parameters. Only one or the other is allowed.`,\n    );\n  }\n}\n\n/**\n * Validates path parameters for the given path.\n *\n * @param   {object[]}  params        - An array of Parameter objects\n * @param   {string}    pathId        - A value that uniquely identifies the path\n * @param   {string}    operationId   - A value that uniquely identifies the operation\n */\nfunction validatePathParameters (params, pathId, operationId) {\n  // Find all {placeholders} in the path string\n  let placeholders = pathId.match(util.swaggerParamRegExp) || [];\n\n  // Check for duplicates\n  for (let i = 0; i < placeholders.length; i++) {\n    for (let j = i + 1; j < placeholders.length; j++) {\n      if (placeholders[i] === placeholders[j]) {\n        throw ono.syntax(\n          `Validation failed. ${operationId} has multiple path placeholders named ${placeholders[i]}`);\n      }\n    }\n  }\n\n  params = params.filter((param) => { return param.in === \"path\"; });\n\n  for (let param of params) {\n    if (param.required !== true) {\n      throw ono.syntax(\n        \"Validation failed. Path parameters cannot be optional. \" +\n        `Set required=true for the \"${param.name}\" parameter at ${operationId}`,\n      );\n    }\n    let match = placeholders.indexOf(\"{\" + param.name + \"}\");\n    if (match === -1) {\n      throw ono.syntax(\n        `Validation failed. ${operationId} has a path parameter named \"${param.name}\", ` +\n        `but there is no corresponding {${param.name}} in the path string`\n      );\n    }\n    placeholders.splice(match, 1);\n  }\n\n  if (placeholders.length > 0) {\n    throw ono.syntax(`Validation failed. ${operationId} is missing path parameter(s) for ${placeholders}`);\n  }\n}\n\n/**\n * Validates data types of parameters for the given operation.\n *\n * @param   {object[]}  params       -  An array of Parameter objects\n * @param   {object}    api          -  The entire Swagger API object\n * @param   {object}    operation    -  An Operation object, from the Swagger API\n * @param   {string}    operationId  -  A value that uniquely identifies the operation\n */\nfunction validateParameterTypes (params, api, operation, operationId) {\n  for (let param of params) {\n    let parameterId = operationId + \"/parameters/\" + param.name;\n    let schema, validTypes;\n\n    switch (param.in) {\n      case \"body\":\n        schema = param.schema;\n        validTypes = schemaTypes;\n        break;\n      case \"formData\":\n        schema = param;\n        validTypes = primitiveTypes.concat(\"file\");\n        break;\n      default:\n        schema = param;\n        validTypes = primitiveTypes;\n    }\n\n    validateSchema(schema, parameterId, validTypes);\n    validateRequiredPropertiesExist(schema, parameterId);\n\n    if (schema.type === \"file\") {\n      // \"file\" params must consume at least one of these MIME types\n      let formData = /multipart\\/(.*\\+)?form-data/;\n      let urlEncoded = /application\\/(.*\\+)?x-www-form-urlencoded/;\n\n      let consumes = operation.consumes || api.consumes || [];\n\n      let hasValidMimeType = consumes.some((consume) => {\n        return formData.test(consume) || urlEncoded.test(consume);\n      });\n\n      if (!hasValidMimeType) {\n        throw ono.syntax(\n          `Validation failed. ${operationId} has a file parameter, so it must consume multipart/form-data ` +\n          \"or application/x-www-form-urlencoded\",\n        );\n      }\n    }\n  }\n}\n\n/**\n * Checks the given parameter list for duplicates, and throws an error if found.\n *\n * @param   {object[]}  params  - An array of Parameter objects\n */\nfunction checkForDuplicates (params) {\n  for (let i = 0; i < params.length - 1; i++) {\n    let outer = params[i];\n    for (let j = i + 1; j < params.length; j++) {\n      let inner = params[j];\n      if (outer.name === inner.name && outer.in === inner.in) {\n        throw ono.syntax(`Validation failed. Found multiple ${outer.in} parameters named \"${outer.name}\"`);\n      }\n    }\n  }\n}\n\n/**\n * Validates the given response object.\n *\n * @param   {string}    code        -  The HTTP response code (or \"default\")\n * @param   {object}    response    -  A Response object, from the Swagger API\n * @param   {string}    responseId  -  A value that uniquely identifies the response\n */\nfunction validateResponse (code, response, responseId) {\n  if (code !== \"default\" && (code < 100 || code > 599)) {\n    throw ono.syntax(`Validation failed. ${responseId} has an invalid response code (${code})`);\n  }\n\n  let headers = Object.keys(response.headers || {});\n  for (let headerName of headers) {\n    let header = response.headers[headerName];\n    let headerId = responseId + \"/headers/\" + headerName;\n    validateSchema(header, headerId, primitiveTypes);\n  }\n\n  if (response.schema) {\n    let validTypes = schemaTypes.concat(\"file\");\n    if (validTypes.indexOf(response.schema.type) === -1) {\n      throw ono.syntax(\n        `Validation failed. ${responseId} has an invalid response schema type (${response.schema.type})`);\n    }\n    else {\n      validateSchema(response.schema, responseId + \"/schema\", validTypes);\n    }\n  }\n}\n\n/**\n * Validates the given Swagger schema object.\n *\n * @param {object}    schema      - A Schema object, from the Swagger API\n * @param {string}    schemaId    - A value that uniquely identifies the schema object\n * @param {string[]}  validTypes  - An array of the allowed schema types\n */\nfunction validateSchema (schema, schemaId, validTypes) {\n  if (validTypes.indexOf(schema.type) === -1) {\n    throw ono.syntax(\n      `Validation failed. ${schemaId} has an invalid type (${schema.type})`);\n  }\n\n  if (schema.type === \"array\" && !schema.items) {\n    throw ono.syntax(`Validation failed. ${schemaId} is an array, so it must include an \"items\" schema`);\n  }\n}\n\n/**\n * Validates that the declared properties of the given Swagger schema object actually exist.\n *\n * @param {object}    schema      - A Schema object, from the Swagger API\n * @param {string}    schemaId    - A value that uniquely identifies the schema object\n */\nfunction validateRequiredPropertiesExist (schema, schemaId) {\n  /**\n   * Recursively collects all properties of the schema and its ancestors. They are added to the props object.\n   */\n  function collectProperties (schemaObj, props) {\n    if (schemaObj.properties) {\n      for (let property in schemaObj.properties) {\n        if (schemaObj.properties.hasOwnProperty(property)) {\n          props[property] = schemaObj.properties[property];\n        }\n      }\n    }\n    if (schemaObj.allOf) {\n      for (let parent of schemaObj.allOf) {\n        collectProperties(parent, props);\n      }\n    }\n  }\n\n  if (schema.required && Array.isArray(schema.required)) {\n    let props = {};\n    collectProperties(schema, props);\n    for (let requiredProperty of schema.required) {\n      if (!props[requiredProperty]) {\n        throw ono.syntax(\n          `Validation failed. Property '${requiredProperty}' listed as required but does not exist in '${schemaId}'`\n        );\n      }\n    }\n  }\n}\n"},"lineCount":345}},"error":null,"hash":"5455179d3938d3cb34e589498a06a46f","cacheData":{"env":{}}}