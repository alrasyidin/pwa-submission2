{"id":"../node_modules/@apidevtools/swagger-parser/lib/options.js","dependencies":[{"name":"/mnt/c/server/html/pwa-submission2/package.json","includedInParent":true,"mtime":1594055417357},{"name":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/package.json","includedInParent":true,"mtime":1594055413754},{"name":"@apidevtools/json-schema-ref-parser/lib/options","loc":{"line":3,"column":34},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/options.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/node_modules/@apidevtools/json-schema-ref-parser/lib/options.js"},{"name":"./validators/schema","loc":{"line":4,"column":32},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/options.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/validators/schema.js"},{"name":"./validators/spec","loc":{"line":5,"column":30},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/options.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/validators/spec.js"},{"name":"util","loc":{"line":6,"column":21},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/swagger-parser/lib/options.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/util/util.js"}],"generated":{"js":"\"use strict\";\n\nconst $RefParserOptions = require(\"@apidevtools/json-schema-ref-parser/lib/options\");\nconst schemaValidator = require(\"./validators/schema\");\nconst specValidator = require(\"./validators/spec\");\nconst util = require(\"util\");\n\nmodule.exports = ParserOptions;\n\n/**\n * Options that determine how Swagger APIs are parsed, resolved, dereferenced, and validated.\n *\n * @param {object|ParserOptions} [options] - Overridden options\n * @constructor\n * @extends $RefParserOptions\n */\nfunction ParserOptions (options) {\n  $RefParserOptions.call(this, ParserOptions.defaults);\n  $RefParserOptions.apply(this, arguments);\n}\n\nParserOptions.defaults = {\n  /**\n   * Determines how the API definition will be validated.\n   *\n   * You can add additional validators of your own, replace an existing one with\n   * your own implemenation, or disable any validator by setting it to false.\n   */\n  validate: {\n    schema: schemaValidator,\n    spec: specValidator,\n  },\n};\n\nutil.inherits(ParserOptions, $RefParserOptions);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@apidevtools/swagger-parser/lib/options.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../node_modules/@apidevtools/swagger-parser/lib/options.js":"\"use strict\";\n\nconst $RefParserOptions = require(\"@apidevtools/json-schema-ref-parser/lib/options\");\nconst schemaValidator = require(\"./validators/schema\");\nconst specValidator = require(\"./validators/spec\");\nconst util = require(\"util\");\n\nmodule.exports = ParserOptions;\n\n/**\n * Options that determine how Swagger APIs are parsed, resolved, dereferenced, and validated.\n *\n * @param {object|ParserOptions} [options] - Overridden options\n * @constructor\n * @extends $RefParserOptions\n */\nfunction ParserOptions (options) {\n  $RefParserOptions.call(this, ParserOptions.defaults);\n  $RefParserOptions.apply(this, arguments);\n}\n\nParserOptions.defaults = {\n  /**\n   * Determines how the API definition will be validated.\n   *\n   * You can add additional validators of your own, replace an existing one with\n   * your own implemenation, or disable any validator by setting it to false.\n   */\n  validate: {\n    schema: schemaValidator,\n    spec: specValidator,\n  },\n};\n\nutil.inherits(ParserOptions, $RefParserOptions);\n"},"lineCount":36}},"error":null,"hash":"ce7581ca0e5eaa82078049f9d8687b32","cacheData":{"env":{}}}