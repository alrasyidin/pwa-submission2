{"id":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","dependencies":[{"name":"/mnt/c/server/html/pwa-submission2/package.json","includedInParent":true,"mtime":1594055417357},{"name":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/package.json","includedInParent":true,"mtime":1594055414345},{"name":"../util/errors","loc":{"line":3,"column":32},"parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/util/errors.js"},{"name":"buffer","parent":"/mnt/c/server/html/pwa-submission2/node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","resolved":"/mnt/c/server/html/pwa-submission2/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\nconst { ParserError } = require(\"../util/errors\");\n\nmodule.exports = {\n  /**\n   * The order that this parser will run, in relation to other parsers.\n   *\n   * @type {number}\n   */\n  order: 100,\n\n  /**\n   * Whether to allow \"empty\" files. This includes zero-byte files, as well as empty JSON objects.\n   *\n   * @type {boolean}\n   */\n  allowEmpty: true,\n\n  /**\n   * Determines whether this parser can parse a given file reference.\n   * Parsers that match will be tried, in order, until one successfully parses the file.\n   * Parsers that don't match will be skipped, UNLESS none of the parsers match, in which case\n   * every parser will be tried.\n   *\n   * @type {RegExp|string|string[]|function}\n   */\n  canParse: \".json\",\n\n  /**\n   * Parses the given file as JSON\n   *\n   * @param {object} file           - An object containing information about the referenced file\n   * @param {string} file.url       - The full URL of the referenced file\n   * @param {string} file.extension - The lowercased file extension (e.g. \".txt\", \".html\", etc.)\n   * @param {*}      file.data      - The file contents. This will be whatever data type was returned by the resolver\n   * @returns {Promise}\n   */\n  async parse (file) {\n    let data = file.data;\n    if (Buffer.isBuffer(data)) {\n      data = data.toString();\n    }\n\n    if (typeof data === \"string\") {\n      if (data.trim().length === 0) {\n        return; // This mirrors the YAML behavior\n      }\n      else {\n        try {\n          return JSON.parse(data);\n        }\n        catch (e) {\n          throw new ParserError(e.message, file.url);\n        }\n      }\n    }\n    else {\n      // data is already a JavaScript value (object, array, number, null, NaN, etc.)\n      return data;\n    }\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}}],"sources":{"../node_modules/@apidevtools/json-schema-ref-parser/lib/parsers/json.js":"\"use strict\";\n\nconst { ParserError } = require(\"../util/errors\");\n\nmodule.exports = {\n  /**\n   * The order that this parser will run, in relation to other parsers.\n   *\n   * @type {number}\n   */\n  order: 100,\n\n  /**\n   * Whether to allow \"empty\" files. This includes zero-byte files, as well as empty JSON objects.\n   *\n   * @type {boolean}\n   */\n  allowEmpty: true,\n\n  /**\n   * Determines whether this parser can parse a given file reference.\n   * Parsers that match will be tried, in order, until one successfully parses the file.\n   * Parsers that don't match will be skipped, UNLESS none of the parsers match, in which case\n   * every parser will be tried.\n   *\n   * @type {RegExp|string|string[]|function}\n   */\n  canParse: \".json\",\n\n  /**\n   * Parses the given file as JSON\n   *\n   * @param {object} file           - An object containing information about the referenced file\n   * @param {string} file.url       - The full URL of the referenced file\n   * @param {string} file.extension - The lowercased file extension (e.g. \".txt\", \".html\", etc.)\n   * @param {*}      file.data      - The file contents. This will be whatever data type was returned by the resolver\n   * @returns {Promise}\n   */\n  async parse (file) {\n    let data = file.data;\n    if (Buffer.isBuffer(data)) {\n      data = data.toString();\n    }\n\n    if (typeof data === \"string\") {\n      if (data.trim().length === 0) {\n        return; // This mirrors the YAML behavior\n      }\n      else {\n        try {\n          return JSON.parse(data);\n        }\n        catch (e) {\n          throw new ParserError(e.message, file.url);\n        }\n      }\n    }\n    else {\n      // data is already a JavaScript value (object, array, number, null, NaN, etc.)\n      return data;\n    }\n  }\n};\n"},"lineCount":65}},"error":null,"hash":"bd249ff5ffbed856c56fda3d6656d691","cacheData":{"env":{}}}